gen_model:
  model_name: "microsoft/Phi-3-mini-128k-instruct"
  apply_model_parallel: true
  tokenizer:
    model_name: "microsoft/Phi-3-mini-128k-instruct"   # <-- fixes KeyError: 'tokenizer'
    padding_side: left
    truncation_side: left
    pad_token_as_eos_token: false
  generation_kwargs:
    do_sample: false
    min_new_tokens: 1
    max_new_tokens: 30

reward_fn:
  id: longbench2_mc
  args:
    gen_model_name: "microsoft/Phi-3-mini-128k-instruct"  # scorer LM
    penalty_lambda: 0.5
    max_new_tokens: 2

datapool:
  name: longbench2
  id: longbench2_jsonl
  args:
    train_path: "data/longbench2/train.jsonl"  # from your converter script

env:
  n_envs: 32
  obs_space: FixedTokenObservation
  act_space: BatchFixedTokenAction
  args:
    max_prompt_length: 4096         # adjust if you want larger context
    max_episode_length: 1
    terminate_on_eos: true

alg:
  id: pg_mask
  args:
    sample_k: 4
    use_scst: true
    n_steps: 1
    gae_lambda: 1
    gamma: 1
    batch_size: 32
    verbose: 1
    learning_rate: 0.00001
    normalize_advantage: false
    ent_coef: 0.001
  policy:
    id: BatchTokenPolicy
    args:
      model_name: allenai/longformer-base-4096
      lr_scheduler:
        name: linear            # or "cosine"
        num_warmup_steps: 0     # tweak if you want warmup

train_evaluation:
  eval_batch_size: 32
  n_iters: 6
  save_every: 1
  eval_freq: 100000000
  metrics:
    - id: rouge_c
    - id: rouge_r
  generation_kwargs:
    do_sample: false
    min_new_tokens: 1
    max_new_tokens: 128
